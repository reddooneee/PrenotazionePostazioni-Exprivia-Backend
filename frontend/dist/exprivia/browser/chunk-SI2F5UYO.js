import{I as c,L as h,P as i,d as u,f,gc as m,h as d,j as s,k as l,l as o,lc as p,mc as g,w as r}from"./chunk-CEITJAHH.js";var v=class n{axiosService=i(g);tokenService=i(p);loginUrl="/auth/login";constructor(){}login(t){return s(this.axiosService.post(this.loginUrl,t)).pipe(c(e=>{if(e?.token)this.tokenService.storeToken(e.token);else throw new Error("Invalid response: missing token")}),r(e=>(console.error("Login error in AuthJwtService:",{timestamp:new Date().toISOString(),status:e.response?.status,message:e.message,data:e.response?.data}),o(()=>e))))}logout(){return new f(t=>{try{this.tokenService.clearToken(),t.next(),t.complete()}catch(e){console.error("Logout error:",{timestamp:new Date().toISOString(),message:e instanceof Error?e.message:"Unknown error"}),t.error(e)}})}isAuthenticated(){return this.tokenService.isTokenValid()}getUserRoles(){return this.tokenService.getRoles()}hasAnyAuthority(t){let e=this.getUserRoles();return t.some(a=>e.includes(a))}static \u0275fac=function(e){return new(e||n)};static \u0275prov=h({token:n,factory:n.\u0275fac,providedIn:"root"})};var y=class n{updateUserIdentity(t){throw new Error("Method not implemented.")}userIdentity=new d(null);authenticationState=new d(!1);accountCacheKey="account-cache";userIdentity$=this.userIdentity.asObservable();authenticationState$=this.authenticationState.asObservable();currentUser=null;initialized=!1;baseUrl="/auth";authJwtService=i(v);axiosService=i(g);tokenService=i(p);router=i(m);accountUrl="/api/utenti/current";constructor(){this.initializeAuth()}initializeAuth(){return u(this,null,function*(){if(this.initialized)return;if(this.tokenService.getToken()&&this.tokenService.isTokenValid())try{let e=this.getCachedAccount();e&&this.authenticate(e);let a=yield this.fetchUserIdentity();a?this.authenticate(a):e||this.authenticate(null)}catch(e){console.error("Error initializing auth:",e),this.getCachedAccount()||this.authenticate(null)}else this.authenticate(null);this.initialized=!0})}fetchUserIdentity(){return u(this,null,function*(){try{let e=yield this.axiosService.get(this.accountUrl);return this.isValidUser(e)?(this.cacheAccount(e),e):null}catch(t){return console.error("Error fetching user identity:",t),null}})}identity(t=!1){return!t&&this.currentUser?l(this.currentUser):this.authJwtService.isAuthenticated()?s(this.fetchUserIdentity()).pipe(c(e=>{e?this.authenticate(e):this.authenticate(null)}),r(e=>(console.error("Error in identity observable:",e),this.authenticate(null),l(null)))):(this.authenticate(null),l(null))}isValidUser(t){return t&&typeof t.nome=="string"&&typeof t.cognome=="string"&&typeof t.email=="string"&&Array.isArray(t.authorities)}authenticate(t){this.userIdentity.next(t),this.authenticationState.next(t!==null),this.currentUser=t,t?this.cacheAccount(t):(this.clearAccountCache(),this.tokenService.clearToken())}hasAnyAuthority(t){let e=this.userIdentity.value;return!e||!e.authorities?!1:t.some(a=>e.authorities?.includes(a))}isAuthenticated(){return this.authJwtService.isAuthenticated()&&this.currentUser!==null}getAuthenticationState(){return this.authenticationState$}getIdentity(){return this.userIdentity$}cacheAccount(t){if(t)try{localStorage.setItem(this.accountCacheKey,JSON.stringify(t))}catch(e){console.error("Error caching account:",e)}}getCachedAccount(){try{let t=localStorage.getItem(this.accountCacheKey);if(!t)return null;let e=JSON.parse(t);return this.isValidUser(e)?e:null}catch(t){return console.error("Error reading cached account:",t),null}}clearAccountCache(){try{localStorage.removeItem(this.accountCacheKey)}catch(t){console.error("Error clearing account cache:",t)}}getUser(){return u(this,null,function*(){return this.currentUser?this.currentUser:this.fetchUserIdentity()})}logout(){return this.authJwtService.logout().pipe(c(()=>{this.authenticate(null),this.clearAccountCache(),this.router.navigate(["/"])}),r(t=>(console.error("Logout error:",t),this.authenticate(null),this.clearAccountCache(),this.router.navigate(["/"]),o(()=>t))))}register(t){return s(this.axiosService.post(`${this.baseUrl}/register`,t)).pipe(r(e=>(console.error("Registration error:",e),o(()=>e))))}forgotPassword(t){return s(this.axiosService.post(`${this.baseUrl}/forgot-password`,{email:t})).pipe(r(e=>(console.error("Forgot password error:",e),o(()=>e))))}resetPassword(t){return s(this.axiosService.post(`${this.baseUrl}/reset-password`,t)).pipe(r(e=>(console.error("Reset password error:",e),o(()=>e))))}static \u0275fac=function(e){return new(e||n)};static \u0275prov=h({token:n,factory:n.\u0275fac,providedIn:"root"})};export{v as a,y as b};
