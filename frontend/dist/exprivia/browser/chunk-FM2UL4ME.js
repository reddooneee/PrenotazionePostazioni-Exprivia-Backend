import{L as p,O as c,j as o,l as t,mc as b,n as l,w as n}from"./chunk-CEITJAHH.js";var m=class a{constructor(e){this.axiosService=e}baseUrl="/api/admin";getAllUsers(){return o(this.axiosService.get(`${this.baseUrl}/utenti`))}getUserById(e){return o(this.axiosService.get(`${this.baseUrl}/utente/${e}`))}getUserByEmail(e){return o(this.axiosService.get(`${this.baseUrl}/utente/email/${e}`))}createUser(e){return o(this.axiosService.post(`${this.baseUrl}/crea_utente`,e))}updateUser(e,r){return o(this.axiosService.put(`${this.baseUrl}/utente/${e}`,r))}deleteUser(e){return o(this.axiosService.delete(`${this.baseUrl}/utente/${e}`)).pipe(l(()=>{}))}createAdminUser(e){return o(this.axiosService.post(`${this.baseUrl}/crea_utente`,e))}static \u0275fac=function(r){return new(r||a)(c(b))};static \u0275prov=p({token:a,factory:a.\u0275fac,providedIn:"root"})};var u=class a{constructor(e){this.axiosService=e}BASE_URL="/api/prenotazioni";getStanzeEPostazioni(){return o(this.axiosService.get(`${this.BASE_URL}/stanze-e-postazioni`)).pipe(n(e=>(console.error("Errore nel recupero delle stanze e postazioni:",e),t(()=>new Error("Impossibile recuperare le stanze e le postazioni")))))}getPrenotazioni(){return o(this.axiosService.get(`${this.BASE_URL}/lista`)).pipe(n(e=>(console.error("Errore nel recupero delle prenotazioni:",e),t(()=>new Error("Impossibile recuperare le prenotazioni")))))}getMiePrenotazioni(){return o(this.axiosService.get(`${this.BASE_URL}/mie-prenotazioni`)).pipe(n(e=>(console.error("Errore nel recupero delle tue prenotazioni:",e),t(()=>new Error("Impossibile recuperare le tue prenotazioni")))))}getPrenotazioneById(e){return o(this.axiosService.get(`${this.BASE_URL}/${e}`)).pipe(n(r=>(console.error(`Errore nel recupero della prenotazione ${e}:`,r),t(()=>new Error("Prenotazione non trovata")))))}getPrenotazioniByDay(e){return o(this.axiosService.get(`${this.BASE_URL}/prenotazioni-del-giorno?data=${e}`)).pipe(n(r=>(console.error("Errore nel recupero delle prenotazioni del giorno:",r),t(()=>new Error("Impossibile recuperare le prenotazioni del giorno")))))}getAvailableTimeSlots(e,r){let i=e.toISOString().split("T")[0];return o(this.axiosService.get(`${this.BASE_URL}/postazioni/${r}/orari-disponibili?data=${i}`)).pipe(n(s=>(console.error("Errore nel recupero degli orari disponibili:",s),t(()=>new Error("Impossibile recuperare gli orari disponibili")))))}createPrenotazione(e){return o(this.axiosService.post(`${this.BASE_URL}/prenota`,e)).pipe(n(r=>{console.error("Errore nella creazione della prenotazione:",r);let i=r.response?.data?.message||"Impossibile creare la prenotazione";return t(()=>new Error(i))}))}createPrenotazioneAdmin(e){return o(this.axiosService.post(`${this.BASE_URL}/admin/prenota`,e)).pipe(n(r=>{console.error("Errore nella creazione della prenotazione admin:",r);let i=r.response?.data?.message||"Impossibile creare la prenotazione";return t(()=>new Error(i))}))}updatePrenotazione(e,r){return o(this.axiosService.put(`${this.BASE_URL}/aggiornaPrenotazione/${e}`,r)).pipe(n(i=>{console.error("Errore nell'aggiornamento della prenotazione:",i);let s=i.response?.data?.message||"Impossibile aggiornare la prenotazione";return t(()=>new Error(s))}))}deletePrenotazione(e){return o(this.axiosService.delete(`${this.BASE_URL}/eliminaPrenotazione/${e}`)).pipe(l(()=>{}),n(r=>(console.error("Errore nell'eliminazione della prenotazione:",r),t(()=>new Error("Impossibile eliminare la prenotazione")))))}exportPrenotazioniDaily(e){console.log(" Inizio Chiamatam API");let r=String(e.getDate()).padStart(2,"0"),i=String(e.getMonth()).padStart(2,"0"),z=`${e.getFullYear()}-${i}-${r}`;return console.log("Data corretta da inviare:",z),o(this.axiosService.get(`${this.BASE_URL}/export/giorno/${z}`,{responseType:"blob"}))}getPrenotazioniByDayAndPostazione(e,r){return o(this.axiosService.get(`${this.BASE_URL}/prenotazioni-del-giorno-e-postazione?data=${e}&postazioneId=${r}`)).pipe(n(i=>(console.error("Errore nel recupero delle prenotazioni del giorno e postazione:",i),t(()=>new Error("Impossibile recuperare le prenotazioni del giorno e postazione")))))}static \u0275fac=function(r){return new(r||a)(c(b))};static \u0275prov=p({token:a,factory:a.\u0275fac,providedIn:"root"})};export{m as a,u as b};
