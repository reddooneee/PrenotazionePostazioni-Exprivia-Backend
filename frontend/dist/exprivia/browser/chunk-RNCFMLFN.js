import{L as z,O as c,j as o,l as i,mc as m,n as p,w as n}from"./chunk-CEITJAHH.js";var u=class s{constructor(e){this.axiosService=e}BASE_URL="/api/prenotazioni";getStanzeEPostazioni(){return o(this.axiosService.get(`${this.BASE_URL}/stanze-e-postazioni`)).pipe(n(e=>(console.error("Errore nel recupero delle stanze e postazioni:",e),i(()=>new Error("Impossibile recuperare le stanze e le postazioni")))))}getPrenotazioni(){return o(this.axiosService.get(`${this.BASE_URL}/lista`)).pipe(n(e=>(console.error("Errore nel recupero delle prenotazioni:",e),i(()=>new Error("Impossibile recuperare le prenotazioni")))))}getMiePrenotazioni(){return o(this.axiosService.get(`${this.BASE_URL}/mie-prenotazioni`)).pipe(n(e=>(console.error("Errore nel recupero delle tue prenotazioni:",e),i(()=>new Error("Impossibile recuperare le tue prenotazioni")))))}getPrenotazioneById(e){return o(this.axiosService.get(`${this.BASE_URL}/${e}`)).pipe(n(r=>(console.error(`Errore nel recupero della prenotazione ${e}:`,r),i(()=>new Error("Prenotazione non trovata")))))}getPrenotazioniByDay(e){return o(this.axiosService.get(`${this.BASE_URL}/prenotazioni-del-giorno?data=${e}`)).pipe(n(r=>(console.error("Errore nel recupero delle prenotazioni del giorno:",r),i(()=>new Error("Impossibile recuperare le prenotazioni del giorno")))))}getAvailableTimeSlots(e,r){let t=e.toISOString().split("T")[0];return o(this.axiosService.get(`${this.BASE_URL}/postazioni/${r}/orari-disponibili?data=${t}`)).pipe(n(a=>(console.error("Errore nel recupero degli orari disponibili:",a),i(()=>new Error("Impossibile recuperare gli orari disponibili")))))}createPrenotazione(e){return o(this.axiosService.post(`${this.BASE_URL}/prenota`,e)).pipe(n(r=>{console.error("Errore nella creazione della prenotazione:",r);let t=r.response?.data?.message||"Impossibile creare la prenotazione";return i(()=>new Error(t))}))}createPrenotazioneAdmin(e){return o(this.axiosService.post(`${this.BASE_URL}/admin/prenota`,e)).pipe(n(r=>{console.error("Errore nella creazione della prenotazione admin:",r);let t=r.response?.data?.message||"Impossibile creare la prenotazione";return i(()=>new Error(t))}))}updatePrenotazione(e,r){return o(this.axiosService.put(`${this.BASE_URL}/aggiornaPrenotazione/${e}`,r)).pipe(n(t=>{console.error("Errore nell'aggiornamento della prenotazione:",t);let a=t.response?.data?.message||"Impossibile aggiornare la prenotazione";return i(()=>new Error(a))}))}deletePrenotazione(e){return o(this.axiosService.delete(`${this.BASE_URL}/eliminaPrenotazione/${e}`)).pipe(p(()=>{}),n(r=>(console.error("Errore nell'eliminazione della prenotazione:",r),i(()=>new Error("Impossibile eliminare la prenotazione")))))}exportPrenotazioniDaily(e){console.log(" Inizio Chiamatam API");let r=String(e.getDate()).padStart(2,"0"),t=String(e.getMonth()).padStart(2,"0"),l=`${e.getFullYear()}-${t}-${r}`;return console.log("Data corretta da inviare:",l),o(this.axiosService.get(`${this.BASE_URL}/export/giorno/${l}`,{responseType:"blob"}))}static \u0275fac=function(r){return new(r||s)(c(m))};static \u0275prov=z({token:s,factory:s.\u0275fac,providedIn:"root"})};export{u as a};
